#include <iostream>
#include <string>
#include <unordered_map>
#include <cstdlib>

using namespace std;

// 계좌 정보를 나타내는 구조체 정의
struct Account {
    int deposit;            // 예금 계좌 잔액
    int savings;            // 적금 계좌 잔액
    int housing_savings;    // 주택청약 계좌 잔액
    int stock_account;      // 주식 계좌 잔액
};

unordered_map<string, string> users;    // 사용자 정보를 저장하기 위한 unordered_map

void handleAssetMenu(const string& username, Account& obj);
int total(const Account& obj);

// 로그인 함수
void login() {
    string username, password;
    cout << endl << "아이디: ";
    getline(cin, username);
    cout << "비밀번호: ";
    getline(cin, password);

    // 입력한 아이디와 비밀번호가 저장된 사용자 정보와 일치하는지 확인
    if (users.find(username) != users.end() && users[username] == password) {
        cout << endl << "===== 로그인 성공 =====" << endl;

        // 사용자에게 환영 메시지 출력
        cout << endl << username << "님 환영합니다." << endl;
        // 사용자의 계좌 정보를 초기화하고 계좌 관리 메뉴로 이동
        Account my_account = { 5000, 4000, 0, 10 };
        handleAssetMenu(username, my_account);
    }
    else {
        cout << endl << "아이디 혹은 비밀번호가 틀렸습니다." << endl << endl;
    }
}

// 회원가입 함수
void signup() {
    string username, password, name;
    cout << endl << "이름: ";
    getline(cin, name);
    cout << "아이디: ";
    getline(cin, username);
    cout << "비밀번호: ";
    getline(cin, password);

    // 아이디가 이미 존재하는지 확인 후 회원가입 처리
    if (users.find(username) == users.end()) {
        users[username] = password;
        cout << endl << "===== 회원가입 성공 =====" << endl << endl;
    }
    else {
        cout << endl << "이미 존재하는 아이디입니다." << endl << endl;
    }
}

// 메인 메뉴 출력
void showMainMenu() {
    cout << "********** swing 은행 **********" << endl;
    cout << "1. 회원가입" << endl;
    cout << "2. 로그인" << endl << endl;
    cout << "번호를 입력하세요 >> ";
}

// 자산 관리 메뉴 출력
void showAssetMenu() {
    cout << endl << "************ swing 자산 관리 서비스 ************" << endl << endl;
    cout << "1. 계좌 정보 출력" << endl;
    cout << "2. 총 자산 출력" << endl;
    cout << "3. 로그아웃" << endl << endl;
    cout << "번호를 입력하세요 >> ";
}

// 계좌의 총 자산 계산
int total(const Account& obj) {
    int total_money = obj.deposit + obj.savings + obj.housing_savings + obj.stock_account;
    return total_money;
}

// 자산 관리 메뉴 처리
void handleAssetMenu(const string& username, Account& obj) {
    string choice;

    while (true) {
        showAssetMenu();
        getline(cin, choice);

        if (choice == "1") {
            cout << endl << "---------------- swing 계좌 정보 ----------------" << endl;
            cout << "|   " << "예금" << "  |    " << "적금" << "   |   " << "주택청약" << "  | " << "주식계좌" << " |" << endl;
            cout << "|   " << obj.deposit << "  |    " << obj.savings << "   |      " << obj.housing_savings << "      |     " << obj.stock_account << "   |" << endl;
            cout << "------------------------------------------------" << endl;
        }
        else if (choice == "2") {
            cout << endl << "현재 " << username << " 자산관리 서비스에 등록된 회원님의 총 자산은 " << total(obj) << "원 입니다." << endl;
        }
        else if (choice == "3") {
            cout << endl << "===== 로그아웃 =====" << endl;
            cout << endl << "로그아웃 되었습니다. 안녕히가세요." << endl;
            exit(0);
        }
    }
}

// 메인 함수
int main() {
    string choice;

    while (true) {
        showMainMenu();
        getline(cin, choice);

        if (choice == "1") {
            signup();
        }
        else if (choice == "2") {
            login();
        }
        else {
            cout << "유효하지 않은 메뉴 선택입니다. 다시 선택해주세요." << endl;
        }
    }

    return 0;
}
